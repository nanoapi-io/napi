name: Release Packages

permissions:
  contents: write
  packages: write

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type: patch, minor, major"
        required: true
        default: patch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.WORKFLOWS_GITHUB_APP_ID }}
          private_key: ${{ secrets.WORKFLOWS_GITHUB_APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Login with git
        run: |
          git config --global user.email "info@nanoapi.io"
          git config --global user.name "nanoapi.io"

      - name: Login to npm registry
        run: npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"

      - name: Build and publish shared package
        run: |
          cd packages/shared
          npm version ${{ github.event.inputs.release_type }} --no-git-tag-version
          npm run build
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update CLI to use latest shared version
        run: |
          SHARED_VERSION=$(node -p "require('./packages/shared/package.json').version")
          cd packages/cli
          # Update dependency version in package.json
          sed -i "s/\"@nanoapi.io\/shared\": \".*\"/\"@nanoapi.io\/shared\": \"^$SHARED_VERSION\"/" package.json
          git add ../shared/package.json package.json
          git commit -m "[skip ci] chore: update shared to v$SHARED_VERSION"

      - name: Run release-it for CLI
        run: npm run release -- ${{ github.event.inputs.release_type }} --ci
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
